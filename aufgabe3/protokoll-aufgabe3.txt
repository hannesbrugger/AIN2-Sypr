// strinsort.c

marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ make stringsort
gcc -g -Wall -Wextra -Werror -Wvla -std=c11 -pedantic    stringsort.c   -o stringsort
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ ./stringsort 200
Unsortiertes Array:
67 135 62 51 140 143 171 44 49 108 11 97 188 45 171 11 196 61 76 29 17 193 27 41 96 188 117 108 108 172 187 176 107 1 27 47 144 198 44 193 58 55 43 46 52 166 58 48 179 86 29 196 79 57 37 128 45 107 36 153 79 175 81 139 177 61 138 121 59 134 67 70 141 62 116 193 28 126 193 160 12 23 156 44 32 146 172 77 5 8 182 84 136 16 175 113 77 66 186 88 0 5 158 142 67 75 87 48 153 81 8 118 56 116 162 40 62 134 69 67 94 51 104 30 67 31 95 96 97 82 185 98 87 143 40 107 170 79 107 124 112 67 194 168 183 156 160 198 42 29 65 88 81 121 71 100 153 166 197 2 48 182 100 88 77 92 147 0 172 54 76 84 73 70 5 56 26 165 6 20 195 24 108 28 145 179 80 50 146 77 53 146 11 105 186 41 150 133 41 74 
Sortiertes Array:
0* 1 100* 104 105 107*** 108*** 11** 112 113 116* 117 118 12 121* 124 126 128 133 134* 135 136 138 139 140 141 142 143* 144 145 146** 147 150 153** 156* 158 16 160* 162 165 166* 168 17 170 171* 172** 175* 176 177 179* 182* 183 185 186* 187 188* 193*** 194 195 196* 197 198* 2 20 23 24 26 27* 28* 29** 30 31 32 36 37 40* 41** 42 43 44** 45* 46 47 48** 49 5** 50 51* 52 53 54 55 56* 57 58* 59 6 61* 62** 65 66 67***** 69 70* 71 73 74 75 76* 77*** 79** 8* 80 81** 82 84* 86 87* 88** 92 94 95 96* 97* 98
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ valgrind ./stringsort 200
==3767== Memcheck, a memory error detector
==3767== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3767== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3767== Command: ./stringsort 200
==3767== 
Unsortiertes Array:
67 135 62 51 140 143 171 44 49 108 11 97 188 45 171 11 196 61 76 29 17 193 27 41 96 188 117 108 108 172 187 176 107 1 27 47 144 198 44 193 58 55 43 46 52 166 58 48 179 86 29 196 79 57 37 128 45 107 36 153 79 175 81 139 177 61 138 121 59 134 67 70 141 62 116 193 28 126 193 160 12 23 156 44 32 146 172 77 5 8 182 84 136 16 175 113 77 66 186 88 0 5 158 142 67 75 87 48 153 81 8 118 56 116 162 40 62 134 69 67 94 51 104 30 67 31 95 96 97 82 185 98 87 143 40 107 170 79 107 124 112 67 194 168 183 156 160 198 42 29 65 88 81 121 71 100 153 166 197 2 48 182 100 88 77 92 147 0 172 54 76 84 73 70 5 56 26 165 6 20 195 24 108 28 145 179 80 50 146 77 53 146 11 105 186 41 150 133 41 74 
Sortiertes Array:
0* 1 100* 104 105 107*** 108*** 11** 112 113 116* 117 118 12 121* 124 126 128 133 134* 135 136 138 139 140 141 142 143* 144 145 146** 147 150 153** 156* 158 16 160* 162 165 166* 168 17 170 171* 172** 175* 176 177 179* 182* 183 185 186* 187 188* 193*** 194 195 196* 197 198* 2 20 23 24 26 27* 28* 29** 30 31 32 36 37 40* 41** 42 43 44** 45* 46 47 48** 49 5** 50 51* 52 53 54 55 56* 57 58* 59 6 61* 62** 65 66 67***** 69 70* 71 73 74 75 76* 77*** 79** 8* 80 81** 82 84* 86 87* 88** 92 94 95 96* 97* 98
==3767== 
==3767== HEAP SUMMARY:
==3767==     in use at exit: 0 bytes in 0 blocks
==3767==   total heap usage: 203 allocs, 203 frees, 4,101 bytes allocated
==3767== 
==3767== All heap blocks were freed -- no leaks are possible
==3767== 
==3767== For lists of detected and suppressed errors, rerun with: -s
==3767== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ make cppcheck
cppcheck --enable=warning,style --std=c11 stringsort.c
Checking stringsort.c ...
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ 


// stringsort-optimiert.C

marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ make stringsort-optimiert
gcc -g -Wall -Wextra -Werror -Wvla -std=c11 -pedantic    stringsort-optimiert.c   -o stringsort-optimiert
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ ./stringsort-optimiert 200
Unsortiertes Array:
53 26 27 20 40 140 31 192 80 32 53 28 84 151 91 30 39 86 134 1 65 0 170 156 60 60 52 78 2 116 180 7 142 7 180 134 148 11 79 28 43 132 8 79 83 51 62 74 89 148 28 154 148 198 62 8 10 114 39 12 183 19 19 77 27 199 12 127 162 91 107 157 175 67 37 59 118 51 85 7 199 113 113 147 63 175 156 73 41 195 37 24 166 9 102 193 160 66 72 123 157 179 80 84 46 69 95 116 120 181 123 71 94 36 19 158 163 127 183 5 74 21 181 40 30 83 186 142 101 58 65 10 190 98 95 188 119 190 105 192 171 180 63 18 169 34 128 132 113 111 89 187 84 71 180 66 154 118 9 8 176 74 18 118 124 113 107 44 56 164 36 27 144 51 197 113 86 125 46 199 189 135 139 73 158 119 140 65 37 149 73 165 175 91 36 100 5 143 96 13 
Sortiertes Array:
0 1 10* 100 101 102 105 107* 11 111 113**** 114 116* 118** 119* 12* 120 123* 124 125 127* 128 13 132* 134* 135 139 140* 142* 143 144 147 148** 149 151 154* 156* 157* 158* 160 162 163 164 165 166 169 170 171 175** 176 179 18* 180*** 181* 183* 186 187 188 189 19** 190* 192* 193 195 197 198 199** 2 20 21 24 26 27** 28** 30* 31 32 34 36** 37** 39* 40* 41 43 44 46* 5* 51** 52 53* 56 58 59 60* 62* 63* 65** 66* 67 69 7** 71* 72 73** 74** 77 78 79* 8** 80* 83* 84** 85 86* 89* 9* 91** 94 95* 96 98
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ valgrind ./stringsort-optimiert 200
==3790== Memcheck, a memory error detector
==3790== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3790== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3790== Command: ./stringsort-optimiert 200
==3790== 
Unsortiertes Array:
171 114 129 162 143 199 1 52 18 110 117 57 109 194 161 184 60 6 54 189 177 102 62 72 159 151 143 8 129 140 79 52 7 8 14 150 159 167 154 130 30 72 187 139 18 148 124 78 106 130 68 83 32 82 155 192 185 98 0 66 190 31 119 197 191 85 148 150 53 102 32 83 126 171 22 144 119 98 175 25 29 195 60 13 77 15 5 14 65 157 80 56 140 151 53 83 37 1 34 42 104 18 77 30 190 51 127 61 150 102 39 131 97 99 144 174 67 102 188 132 59 20 140 152 172 194 35 161 147 21 155 51 40 32 34 30 83 161 91 33 63 82 164 160 182 61 86 49 163 26 133 174 198 74 126 170 68 162 83 15 135 38 19 175 70 5 157 106 118 1 91 181 83 8 93 65 69 131 66 32 109 0 6 107 74 85 30 94 199 65 61 134 56 32 62 78 37 19 184 107 
Sortiertes Array:
0* 1** 102*** 104 106* 107* 109* 110 114 117 118 119* 124 126* 127 129* 13 130* 131* 132 133 134 135 139 14* 140** 143* 144* 147 148* 15* 150** 151* 152 154 155* 157* 159* 160 161** 162* 163 164 167 170 171* 172 174* 175* 177 18** 181 182 184* 185 187 188 189 19* 190* 191 192 194* 195 197 198 199* 20 21 22 25 26 29 30*** 31 32**** 33 34* 35 37* 38 39 40 42 49 5* 51* 52* 53* 54 56* 57 59 6* 60* 61** 62* 63 65** 66* 67 68* 69 7 70 72* 74* 77* 78* 79 8** 80 82* 83***** 85* 86 91* 93 94 97 98* 99
==3790== 
==3790== HEAP SUMMARY:
==3790==     in use at exit: 0 bytes in 0 blocks
==3790==   total heap usage: 4 allocs, 4 frees, 3,424 bytes allocated
==3790== 
==3790== All heap blocks were freed -- no leaks are possible
==3790== 
==3790== For lists of detected and suppressed errors, rerun with: -s
==3790== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ 


// time

marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ time ./stringsort 20000 > /dev/null

real	0m1.330s
user	0m1.329s
sys	0m0.000s
marc@marcubuntu:~/Schreibtisch/Studium/Semester2/Systemprogrammierung/sypr-uebungen/aufgabe3$ time ./stringsort-optimiert 20000 > /dev/null

real	0m2.059s
user	0m2.059s
sys	0m0.000s
